<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[我是清都山水郎]]></title>
  <link href="http://odinyu.github.com/atom.xml" rel="self"/>
  <link href="http://odinyu.github.com/"/>
  <updated>2012-03-27T17:52:05+08:00</updated>
  <id>http://odinyu.github.com/</id>
  <author>
    <name><![CDATA[sleepy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[将DNS解析到dnspod上]]></title>
    <link href="http://odinyu.github.com/blog/put-dns-to-dnspod/"/>
    <updated>2012-03-23T16:21:00+08:00</updated>
    <id>http://odinyu.github.com/blog/put-dns-to-dnspod</id>
    <content type="html"><![CDATA[<p>昨天晚上无意间发现域名被墙，然后再一查，原来是godaddy又被墙了，害我也受牵连。</p>

<p>之前早就想过要把dns解析到dnspod上去，但一直懒得动，不过这次终于决定要动一下了。</p>

<h2>具体过程</h2>

<p>先注册dnspod，取得两个dns解析的地址</p>

<p><img src="http://public.bay.livefilestore.com/y1pcOWa97XSVygnCfwMVgwdhOwD4bNjkN99XXSJ2b61KNw5m-QssfQzwn6-36yiZOM_pXFvBIW2jhDRAv7km4HPiQ/ScreenShot_2012-03-23_155217.jpg" alt="dns解析地址" /></p>

<p>到godaddy上改成新的地址</p>

<p>再到dnspod上添加A记录，如下图所示</p>

<p><img src="http://public.bay.livefilestore.com/y1pNkYMMZT7cFIalK-S7XPHqXAEJM90kiwhViGBK_NXsFusU9KD3IUDShCrcuZjQ85GR9sSTYhM5XDPLBtNLngJ8w/ScreenShot_2012-03-23_155253.jpg" alt="A记录" /></p>

<p>继续添加CNAME</p>

<p><img src="http://public.bay.livefilestore.com/y1pWwvZbClwynCufLVnQqLB7TZjYjOLDFl2ufIWJ6kRL1PnmPvBj6oD4VKF99UuYA47uTjeicABw0vbrGDAakNRzA/ScreenShot_2012-03-23_155305.jpg" alt="CNAME" /></p>

<p>好像过个10分钟左右，dns解析就会生效，感觉还不错。在天朝就要这样地折腾，唉！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[吐槽]]></title>
    <link href="http://odinyu.github.com/blog/tucao/"/>
    <updated>2012-03-20T21:53:00+08:00</updated>
    <id>http://odinyu.github.com/blog/tucao</id>
    <content type="html"><![CDATA[<p>在我的理解中吐槽就是抱怨的意思，虽然知道抱怨并没有什么用，不过还是要吐一下，不然憋得不舒服。</p>

<p>汽油又涨了，93号直接进入8元区间，从我刚开车时2007年的5元不到涨到5年后的8元，国人的消费能力还是很值得鼓舞的。</p>

<p>老婆的医院依然是那么地忙，昨天晚上10点多了还有10多个人在浑浊并充斥着病菌的空气中排队等着吊针，而我的美女只能埋头工作，还常常要担心某个脑子也需要吊水的病人的谩骂。</p>

<p>工作团队的一个产品貌似社会反响还不错，不过团队中某些人的工作能力实在是不得不让人抓狂，既愤怒于他们的呆板兼麻木，又悲哀于他们的无脑兼脑残。</p>

<p>自己的身体好像越来越容易出问题，不过还好我已经开始注意，平时上下班尽量少开车多走路，争取以后工作时能经常站起来动动手脚，久坐伤身啊！</p>

<p>好像吐得不多，也算是先吐为快吧，下次继续。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[disqus回复评论超方便]]></title>
    <link href="http://odinyu.github.com/blog/disqus-is-very-convenience/"/>
    <updated>2012-03-19T18:20:00+08:00</updated>
    <id>http://odinyu.github.com/blog/disqus-is-very-convenience</id>
    <content type="html"><![CDATA[<p>disqus用下来感觉还不错，昨天又发现了一个很方便的功能，就是可以直接在disqus的通知邮件里回复评论者，很sweet!</p>

<blockquote><p>You can moderate through email. Respond in the body with &#8220;Delete&#8221;. Respond in the body to post a reply comment.</p></blockquote>

<p>上面是disqus通知邮件里的提示，我按提示回复了一下，果然直接在原评论后嵌套了我的回复，相当地方便，超好用!</p>

<p>ps，刚才试用了一个和友言差不多的国内的社会化评论产品&#8211;评论啦，能导入wordpress，但却不能在新的网页上显示评论，也就是无法关联评论。所以现在还是继续用disqus，虽然很国外。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的宝贝小猪]]></title>
    <link href="http://odinyu.github.com/blog/my-baby-piglet/"/>
    <updated>2012-03-19T18:07:00+08:00</updated>
    <id>http://odinyu.github.com/blog/my-baby-piglet</id>
    <content type="html"><![CDATA[<p>刚才我家的小猪给我打了个电话，电话里问我他的新玩具“果宝特工”手上为什么不能拿剑，而说明书里是可以的。对于如此可爱的问题，我只能回答他等我晚上回家后再帮他弄。</p>

<p>记得上周他也打电话给我，电话里问的是ipad里某个游戏要怎么选关。结果，经过我的电话指导，成功搞定。</p>

<p>放下电话，回想刚才小猪在电话里可爱的声音，真心觉得好像上了一天班也并不怎么劳累了，呵呵。</p>

<p>弹指一瞬间，小猪的出生到现在已经快要5年了，居然现在已经长大到遇到问题会电话寻求帮助，并且语言表达也相当清楚，真是很棒！</p>

<p>看来有时间更要多给他找点有趣的ipda应用，让他的欢笑充满我们的家。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用mklink把octopress直接放到dropbox同步文件夹内]]></title>
    <link href="http://odinyu.github.com/blog/mklink-octopress-to-dropbox/"/>
    <updated>2012-03-19T15:53:00+08:00</updated>
    <id>http://odinyu.github.com/blog/mklink-octopress-to-dropbox</id>
    <content type="html"><![CDATA[<p>之前准备把博客迁移到octopress在google上找参考的时候，就看到有人说将octopress直接放到dropbox同步文件夹里，这样方便在多个环境内修改日志，而避免用git去pull再push的麻烦。不过那么大神没有给出解决文案，不过至少也给了一个好的思路。</p>

<p>很久以前曾经看到过dropbox的使用技巧里如何将多个文件夹都能同步，在win7环境下使用mklink就能解决。然后我再次上google进行了一番查询，下面给出我自己所使用的代码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mklink /d "d:\Program Files\Git\octopress\" d:\dropbox\Dropbox\octopress\</span></code></pre></td></tr></table></div></figure>


<p>这里需要注意三点：</p>

<ul>
<li>双引号只是针对windows系统下带空格的文件夹，不加双引号会报错</li>
<li>双引号内的octopress文件夹必须是不存在的</li>
<li>dropbox内的octopress文件夹需要先建立好</li>
</ul>


<h3>后记</h3>

<p>今天突然发现两个也用octopress的博客的主题和我用的是一样的，这个让人感觉有点郁闷，就像开开心心地穿了件新衣服出去却发现满街都是和你穿得一样的人那种感觉。</p>

<p>所以，等有空的时候必须要改一下主题，虽然我并不擅长css。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将我的域名指向到github上的octopress]]></title>
    <link href="http://odinyu.github.com/blog/direct-domain-to-octopress-at-equals-github/"/>
    <updated>2012-03-15T17:58:00+08:00</updated>
    <id>http://odinyu.github.com/blog/direct-domain-to-octopress-at-equals-github</id>
    <content type="html"><![CDATA[<p>经过了一周时间不断加班的摧残，今天终于有空来折腾octopress了。</p>

<p>想着将disqus换成友言的，希望更适合中文环境。将评论导入的过程比较麻烦，先是想在wordpress装上友言的插件，然后导出所有评论，以为这样可能会比较好导入。可是打开一看，日志的url不正确，不是我需要的那种。</p>

<p>换种方法，从之前导入好评论的disqus里导出，然后写代码生成友言格式的xml文件。使用dom4j，还蛮简单的，1个多小时搞定。</p>

<p>可惜导入成功后，无法与现有的日志进行匹配，自动化程序远不及disqus。</p>

<p>所以最后还是回归disqus，并且顺便把域名也指向github，以示今后就在octopress上折腾的决心。</p>

<h3>记录一下将域名指向github的过程</h3>

<p>需要在octopress的根目录里增加一个文件</p>

<p><code>echo 'fancyoung.com' &gt;&gt; source/CNAME</code></p>

<p>到godaddy上修改cname</p>

<p><code>@ =&gt; odinyu.github.com</code></p>

<p>并修改A</p>

<p><code>@ =&gt; 207.97.227.245</code></p>

<h4>今天游戏上线还算比较平稳，所以终于不用加班到很晚，抚额庆幸</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[没有重构的日子]]></title>
    <link href="http://odinyu.github.com/blog/without-rconstruction-day/"/>
    <updated>2012-03-12T18:15:00+08:00</updated>
    <id>http://odinyu.github.com/blog/without-rconstruction-day</id>
    <content type="html"><![CDATA[<p>今天我们的团队开始没有重构，也意味着痛苦的日子真正开始。</p>

<p>整整一天，为了一个问卷弹出框的样式搞得晕头转向，最后草草收工。</p>

<p>看着同事被页面上的样式问题困扰，而因为没有重构的协助只能继续痛苦。</p>

<p>还有同事因为样式问题周末加班到凌晨，然后周日晚上再次加班。</p>

<p>真是很不明白，一个网页游戏的团队居然没有一个重构。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一周心情总结]]></title>
    <link href="http://odinyu.github.com/blog/one-week-mood-summary/"/>
    <updated>2012-03-09T18:13:00+08:00</updated>
    <id>http://odinyu.github.com/blog/one-week-mood-summary</id>
    <content type="html"><![CDATA[<p>这周总的来说心情一般，一是因为天气一直不是很好，二是工作依然忙乱。</p>

<p>总算是有时间来折腾octopress，其实也只是给自己一点写日志的动力，同时也让自己能稍稍动点脑筋。</p>

<p>接下来准备调整一下octopress的样式，并再加上一些必须的功能，虽然简单是美但也不能一点功能都没有。</p>

<p>这几天itunes的下载速度又不怎么样了，难道Apple又抽风了？还是在想念lumia 800，可是想想老婆应该是不会同意我买，看来也只能暂时想想罢了。</p>

<p>我们的重构要走了，想不到今后没有重构的工作要怎么去做。应该会新招人来，所以还是希望新来的不要太菜！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于美剧的吐槽]]></title>
    <link href="http://odinyu.github.com/blog/american-tv/"/>
    <updated>2012-03-08T15:57:00+08:00</updated>
    <id>http://odinyu.github.com/blog/american-tv</id>
    <content type="html"><![CDATA[<p>美剧也看了有好多年了，现在也还一直在看，当前就同时在追7个剧集。大言不惭地说，看多了自己的欣赏水平也上去了，因此对于美剧也有些东西不得不吐槽一下。</p>

<h3>剧情</h3>

<p>我想很多人开始看美剧都是从《越狱》开始的，当时我也曾倾心于《越狱》跌宕起伏的剧情，不过后来仔细推想一下，但会觉得有些剧情的设计实在是很牵强附会。</p>

<p>当前大多数我看过的美剧都会有这种问题的存在，有的可能第一季剧情很连贯让人看得很爽，但第二季没故事可编了就开始乱来。有的美剧的剧情则连第一季都不能完全地让人信服，除了是老外在演戏以及画面比较好外，比之国产剧也好不到哪去。</p>

<h3>被砍</h3>

<p>和国产剧不同的是，美剧是边拍边播，一旦收视不佳就会被砍。所以有的时候我很喜欢的美剧会实然就停播，然后就再也看不到了，比如《flash forwards》等。</p>

<p>有的美剧虽然没被砍，可是也会因为收视不佳而被迫减少剧集数量，结果是直接导致虎头蛇尾，如《heroes》。</p>

<h3>等待</h3>

<p>追美剧需要很好的耐心，一般每星期只有一集，遇到圣诞和球赛都会有长长的停播期，更是让人等得心焦。所以追美剧同时追5到6个是再正常不过，因为不用担心没东西看。</p>

<p>另外有的美剧并不是很热门，那么要等它的翻译字幕就更是有点悬了，而要等好的字幕那就想都别想了。</p>

<p>暂时就先吐槽这些，美剧还是要继续看下去的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装octopress主题slash]]></title>
    <link href="http://odinyu.github.com/blog/install-octopress-theme-slash/"/>
    <updated>2012-03-07T21:45:00+08:00</updated>
    <id>http://odinyu.github.com/blog/install-octopress-theme-slash</id>
    <content type="html"><![CDATA[<p>还是对于octopress折腾的记录，年纪大了记不住那么多的命令。</p>

<p>这个slash主题就是我现在用的这个，很简洁大方，同时还很喜欢它的灰色调。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress
</span><span class='line'>git clone git@github.com:tommy351/Octopress-Theme-Slash.git .themes/slash
</span><span class='line'>rake install['slash']
</span><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用脚本发布octopress日志]]></title>
    <link href="http://odinyu.github.com/blog/post-octopress-via-sh-script/"/>
    <updated>2012-03-07T13:31:00+08:00</updated>
    <id>http://odinyu.github.com/blog/post-octopress-via-sh-script</id>
    <content type="html"><![CDATA[<p>经过本人不断的努力和尝试，终于可以比较舒服地并不受打扰地发布日志到octopress，这下终于爽了！哈哈！</p>

<h3>此举的目的</h3>

<p>可以毫不避讳地说，是为了偷懒。</p>

<h3>准备工作</h3>

<p>不过为了长期地偷懒，先期还是需要做一些准备工作的。</p>

<ul>
<li>首先是在网上找到高手写的sh脚本。</li>
<li>然后对脚本进行修改，也就是自定义。</li>
<li>下载并安装mktemp for windows。</li>
</ul>


<h3>贴出脚本</h3>

<p>脚本需要放在octopress的安装目录。</p>

<figure class='code'><figcaption><span> (blog.sh)</span> <a href='http://odinyu.github.com/downloads/code/blog.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="c"># Author: Hsin-Yi Chen &lt;ossug.hychen AT gmail.com&gt;</span>
</span><span class='line'><span class="c"># Alter: Odin Yu &lt;qdssly AT gmail.com&gt;</span>
</span><span class='line'><span class="nv">ERRMSG_WRONGDIR</span><span class="o">=</span><span class="s1">&#39;You are not under octopress directory&#39;</span>
</span><span class='line'><span class="o">[</span> ! -f _config.yml <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="k">${</span><span class="nv">ERRMSG_WRONGDIR</span><span class="k">}</span> <span class="o">&amp;&amp;</span> <span class="nb">exit</span>
</span><span class='line'>
</span><span class='line'><span class="nv">BLOGDIR</span><span class="o">=</span><span class="k">${</span><span class="nv">PWD</span><span class="k">}</span>
</span><span class='line'>
</span><span class='line'>submit<span class="o">(){</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">message</span><span class="o">=</span><span class="k">${</span><span class="nv">1</span><span class="p">?</span><span class="s2">&quot;requires message&quot;</span><span class="k">}</span>
</span><span class='line'>  git add .
</span><span class='line'>  git commit -m <span class="k">${</span><span class="nv">message</span><span class="k">}</span>
</span><span class='line'>  git push origin <span class="nb">source</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>update<span class="o">(){</span>
</span><span class='line'>  <span class="nb">cd </span>_deploy
</span><span class='line'>  git pull origin master
</span><span class='line'>  <span class="nb">cd</span> ..
</span><span class='line'>  git pull origin <span class="nb">source</span>
</span><span class='line'><span class="nb"> </span>rake generate
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>generate<span class="o">(){</span>
</span><span class='line'>  rake generate
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>deploy<span class="o">(){</span>
</span><span class='line'>  rake deploy
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>update_octopress<span class="o">(){</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s1">&#39;upgrading octopress source&#39;</span>
</span><span class='line'>  git pull octopress master     <span class="c"># Get the latest Octopress</span>
</span><span class='line'>  bundle install                <span class="c"># Keep gems updated</span>
</span><span class='line'>  rake update_source            <span class="c"># update the template&#39;s source</span>
</span><span class='line'>  rake update_style             <span class="c"># update the template&#39;s style</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>preview<span class="o">(){</span>
</span><span class='line'>  rake preview &amp;
</span><span class='line'>  sleep 1
</span><span class='line'>  ff http://127.0.0.1:4000
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>upgrade<span class="o">(){</span>
</span><span class='line'>  update_octopress
</span><span class='line'>  generate
</span><span class='line'>  deploy
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># start to write new post</span>
</span><span class='line'><span class="c"># @param: post title</span>
</span><span class='line'>post<span class="o">(){</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">title</span><span class="o">=</span><span class="k">${</span><span class="nv">1</span><span class="p">?</span><span class="s2">&quot;requires title&quot;</span><span class="k">}</span>
</span><span class='line'>  _new_item post <span class="k">${</span><span class="nv">title</span><span class="k">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># start to write new page</span>
</span><span class='line'><span class="c"># @param: page title</span>
</span><span class='line'>page<span class="o">(){</span>
</span><span class='line'>  _new_item page <span class="nv">$1</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>_new_item<span class="o">(){</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">tmpfile</span><span class="o">=</span><span class="sb">`</span>mktemp<span class="sb">`</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">item_name</span><span class="o">=</span><span class="k">${</span><span class="nv">1</span><span class="p">?</span><span class="s2">&quot;requires item name&quot;</span><span class="k">}</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">title</span><span class="o">=</span><span class="k">${</span><span class="nv">2</span><span class="p">?</span><span class="s2">&quot;requires title&quot;</span><span class="k">}</span>
</span><span class='line'>  rake new_<span class="k">${</span><span class="nv">item_name</span><span class="k">}</span><span class="o">[</span><span class="s2">&quot;${title}&quot;</span><span class="o">]</span> | tee <span class="k">${</span><span class="nv">tmpfile</span><span class="k">}</span>
</span><span class='line'>  <span class="nb">local </span><span class="nv">file</span><span class="o">=</span><span class="sb">`</span>cat <span class="k">${</span><span class="nv">tmpfile</span><span class="k">}</span> | awk -F: <span class="s1">&#39;{print $2}&#39;</span> | sed -e <span class="s1">&#39;s/ //&#39;</span><span class="sb">`</span>
</span><span class='line'>  md <span class="k">${</span><span class="nv">BLOGDIR</span><span class="k">}</span>/<span class="nv">$file</span>
</span><span class='line'>  rm <span class="k">${</span><span class="nv">tmpfile</span><span class="k">}</span>
</span><span class='line'>  <span class="c"># return file name</span>
</span><span class='line'>  <span class="nv">RET</span><span class="o">=</span><span class="k">${</span><span class="nv">file</span><span class="k">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Main</span>
</span><span class='line'><span class="c"># ----</span>
</span><span class='line'><span class="nv">actions</span><span class="o">=</span><span class="s2">&quot;post upgrade preview deploy&quot;</span>
</span><span class='line'><span class="nv">action</span><span class="o">=</span><span class="k">${</span><span class="nv">1</span><span class="p">?</span><span class="s2">&quot;requirs action!, avaliabl actions are ${actions}&quot;</span><span class="k">}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># run action</span>
</span><span class='line'><span class="nb">shift</span>
</span><span class='line'><span class="k">${</span><span class="nv">action</span><span class="k">}</span> <span class="nv">$@</span>
</span></code></pre></td></tr></table></div></figure>


<h3>我的自定义</h3>

<p>上面的脚本里提到的两个我自己加的程序调用的代码如下</p>

<figure class='code'><figcaption><span>md </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'>exec "c:\Users\Administrator\AppData\Local\Apps\2.0\W8LVT3AZ.YHR\5O9LMMDL.270\mark..tion_12329825c85e214b_0001.0001_aee1d4f50dc5492c\MarkdownPad" "$@"
</span><span class='line'># 上面的路径需要自己修改</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ff </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/sh
</span><span class='line'>
</span><span class='line'>exec "d:\Program Files\Mozilla Firefox\firefox" "$@"
</span><span class='line'># 上面的路径需要自己修改</span></code></pre></td></tr></table></div></figure>


<p>这两个文件不要有后缀名，并放到Git安装目录里的bin目录下</p>

<h3>整个日志发布的工作流</h3>

<figure class='code'><figcaption><span>日志发布的步骤 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>blog.sh update
</span><span class='line'># 如果有多台电脑同时编辑博客的话，可能需要先更新到最新的状态
</span><span class='line'>blog.sh post this-is-the-test-title        
</span><span class='line'># blog.sh是我对脚本的命名
</span><span class='line'># post是命令
</span><span class='line'># this-is-the-test-title是日志的title，同时也是markdown文件的名字
</span><span class='line'># 执行这条命令后我的电脑上会打开MarkdownPad来编辑新创建的markdown文件
</span><span class='line'>blog.sh deploy
</span><span class='line'># 执行这条命令后，会进行rake genarate和rake deploy操作，如果有发布密码则会提示
</span><span class='line'>blog.sh submit this is work for XXX
</span><span class='line'># 执行这条命令，即提交所有的修改到github上去</span></code></pre></td></tr></table></div></figure>


<h3>小结</h3>

<p>通过脚本将原先需要分多次手打的命令整合到一起，这样方便操作，更适合懒人。</p>

<p>脚本方面可能还需要调整和测试，不过暂时能凑合着用了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从iphone上发布日志到octopress]]></title>
    <link href="http://odinyu.github.com/blog/post-from-iphone/"/>
    <updated>2012-03-07T11:20:00+08:00</updated>
    <id>http://odinyu.github.com/blog/post-from-iphone</id>
    <content type="html"><![CDATA[<h3>昨天在被窝里的记录</h3>

<p>在iphone上试了几个号称支持markdown并能同步到dropbox的应用，结果都不尽如人意，最后还是选择用evernote来进行移动终端的日志记录。</p>

<p>其实移动终端的记录有其一定的意义，比如我现在就是躺在被窝里单手写日志，准备明天公司里从evernote里复制到文本再发到线上博客。</p>

<p>感觉整个过程有点曲折，所以明天有必要去网上找一下能更方便的方法。</p>

<p>最好是能向iphone上的wordpress那样 ，写完直接发布就一切OK。</p>

<p>罗列一下明天需要做的一些事情</p>

<ul>
<li>继续修改从wordpress迁移过来的日志</li>
<li>将本篇日志发出去</li>
<li>寻找更方便的移动日志发布手段</li>
</ul>


<h3>之后睡前的神奇发现</h3>

<p>突然在google上看到有人说goodreader可以同步txt到dropbox，报着最后试一下不行就睡的想法试了一把，居然goodreader真的完成了这个本来是不可能完成的任务。</p>

<p>今天早上又重新启用了Belvedere这个小软件，用途是当dropbox内某文件夹有txt文件存在，就改后缀名为markdown，然后移动到octopress/source/_post文件夹内。目前这个功能已经测试成功，也就是说打开电脑后不多会就可直接使用命令来发布日志到octopress了，而无需手动复制内容。</p>

<p>接下来考虑通过执行脚本来发布文章，不过目前看来还是有点困难，因为本人不是很懂Ruby，这个需要慢慢研究了。不过至少移动端记录并同步到云端已经ok，已经减少了很多与写作无关的步骤，心情大好！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从Wordpress迁移到Octopress]]></title>
    <link href="http://odinyu.github.com/blog/migrate-from-wordpress-to-octopress/"/>
    <updated>2012-03-06T14:54:00+08:00</updated>
    <id>http://odinyu.github.com/blog/migrate-from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p>既然已经建了octopress，又把公司和家里的两台电脑的环境都配置好，那就没有理由不从Wordpress迁移到Octopress。通过网络上高手给出的脚本和指导，整个过程比较顺利，现记录之。</p>

<h3>导出Wordpress里的内容</h3>

<p>我用的是Wordpress导出的xml文件，而不是数据库的备份。</p>

<h3>转换xml到md文档</h3>

<p>使用高手给出的脚本,<a href="https://github.com/odinyu/odinyu.github.com/blob/source/md.rb" title="下载">下载</a>。</p>

<p>重命名Wordpress导出的文件为wordpress.xml，然后放到<code>～/octopress/source/_post</code>下，再执行下面的代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd octopress/source/_post
</span><span class='line'>ruby md.rb wordpress.xml</span></code></pre></td></tr></table></div></figure>


<p>可能会提示少包，可以这样安装</p>

<p><code>gem install ya2yaml</code></p>

<p>注意，如果是windows环境下，hpricot这个包需要这样安装，不然会一直不成功</p>

<p><code>gem install hpricot --platform=mswin32</code></p>

<h3>细节处理</h3>

<p>脚本生成的是每篇wordpress上日志的md文档，未能完全按markdown语法格式化，还需要人工调整一下。另外就是原先的图片，如果是外链的还好，对于直接上传到wordpress上的需要修改一下路径。</p>

<p>当然，有些日志可能不再需要，适当的再进行一些清理工作。</p>

<h3>记录很重要</h3>

<p>虽然网络上需要的资讯一般都能找到，但是每次要用的时候再找总是很麻烦，记录在自己的手边才是王道！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在第二台电脑上配置github octopress的本地环境]]></title>
    <link href="http://odinyu.github.com/blog/how-to-configure-the-local-environment-of-octopress-with-github-on-second-pc/"/>
    <updated>2012-03-05T23:18:00+08:00</updated>
    <id>http://odinyu.github.com/blog/how-to-configure-the-local-environment-of-octopress-with-github-on-second-pc</id>
    <content type="html"><![CDATA[<p>本来倒是没想在家里的本本上也进行配置，不过一颗geek的心却始终骚动着，最终还是google了出来具体的方法，当然也是综合了多方建议，所以有必要在还没有忘记之时记录一下。</p>

<h3>安装Ruby</h3>

<ul>
<li>还是通过<a href="http://rubyinstaller.org/" title="RubyInstraller">http://rubyinstaller.org/</a>的方式，不过好像我在家却不用翻墙居然也能下，上天有眼？</li>
<li>同样还是不要忘记安装<a href="http://rubyinstaller.org/add-ons/devkit/" title="Devkit">http://rubyinstaller.org/add-ons/devkit/</a>.</li>
</ul>


<h3>从github上获取自己的octopress内容</h3>

<figure class='code'><figcaption><span>从github上获取自己的octopress内容 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone -b source git@github.com:username/username.github.com.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>git clone git@github.com:username/username.github.com.git _deploy</span></code></pre></td></tr></table></div></figure>


<h3>安装依赖gems</h3>

<figure class='code'><figcaption><span>安装依赖gems </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler --pre 
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<p>这里在我具体安装的时候有点小曲折，不过都还是用google解决了。</p>

<ul>
<li><code>gem install bundler</code>可能会比较慢，所以改用<code>gem install bundler --pre</code></li>
<li><code>rake install</code>的时候报错，好像是说我用的gem版本太新什么的，google后的解决方法是<code>bundle update</code>，然后再<code>rake install</code>。</li>
</ul>


<h3>修改配置</h3>

<ul>
<li>到Ruby的安装目录\lib\ruby\gems\1.9.1\gems\jekyll-0.11.0\lib\jekyll\找到convertible.rb这个文件，修改<code>self.content = File.read(File.join(base, name))</code>为<code>self.content = File.read(File.join(base, name), :encoding =&gt; "utf-8")</code>。</li>
</ul>


<h3>从github上更新source内容的命令</h3>

<figure class='code'><figcaption><span>从github上更新source内容的命令 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd _deploy
</span><span class='line'>git pull origin master
</span><span class='line'>cd ..
</span><span class='line'>git pull origin source</span></code></pre></td></tr></table></div></figure>


<p>至此大功告成！总耗时1小时左右，还算顺利。</p>

<h3>另外补充一下windows下安装Devkit的方法，免得下次还要找。</h3>

<figure class='code'><figcaption><span>windows下安装Devkit的方法 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd &lt;DEVKIT_INSTALL_DIR>
</span><span class='line'>ruby dk.rb init
</span><span class='line'>ruby dk.rb install
</span><span class='line'>#检验是否成功
</span><span class='line'>gem install rdiscount --platform=ruby</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[纯粹瞎想]]></title>
    <link href="http://odinyu.github.com/blog/chun-cui-xia-xiang/"/>
    <updated>2012-03-02T00:00:00+08:00</updated>
    <id>http://odinyu.github.com/blog/chun-cui-xia-xiang</id>
    <content type="html"><![CDATA[<p>躺下了却睡不着，刚才和老婆因为该如何教育儿子有点意见分歧。</p>

<p>儿子很顽皮，小孩的天性如此，但我觉得也需要让他知道一点规矩。虽然我很乐意接受自由，也希望孩子可以自由得成长，但如今的中国社会自由两字的代价又何其之大！</p>

<p>不知道在哪里看到过的一句话，深以为然。“不能游离于制度之外，而应该了解并掌握制度，然后再决定是否需要摧毁制度或是重建制度。”
作为小屁民的我，其实也只是希望孩子能早点学会怎么去尊重他可能并不以为然的教条。</p>

<p>我的想法可能很牵强，也必然无人理会，所以就只能记录在这杂草丛生的博客，供自己日后再慢慢端详。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[惊蛰未到，魔都已经打雷了]]></title>
    <link href="http://odinyu.github.com/blog/thunder-before-jingzhe/"/>
    <updated>2012-03-01T00:00:00+08:00</updated>
    <id>http://odinyu.github.com/blog/thunder-before-jingzhe</id>
    <content type="html"><![CDATA[<p>这两天公司里人心惶惶的，看着一个个部门里的人被裁到只剩个位数，怎么可能让人心情愉快呢。</p>

<p>窗外一片迷雾中，偶尔亮出几道闪电，轰鸣的春雷也应声响起。魔都果然有魔都的风范，惊蛰还没到，老天就开始打雷了。</p>

<p>和同事戏言，是不是公司大规模裁员搞得老天也发怒了？</p>

<p>以上文字是忙了一天后郁闷心情之下的表述，仅此而已。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在github上用octopress搭建博客过程纪要]]></title>
    <link href="http://odinyu.github.com/blog/introduce-octopress-on-github/"/>
    <updated>2012-02-29T01:25:00+08:00</updated>
    <id>http://odinyu.github.com/blog/introduce-octopress-on-github</id>
    <content type="html"><![CDATA[<p>几个小时之前刚在github pages上使用octopress搭建了一个博客副本。本来基于本人一贯拖延的作风，是想过几天再记录整个过程的，但是正好在通宵工作但又暂时无事可干中，所以还是趁记忆还比较清晰的时候来搞定它。</p>

<p>在开始写过程之前先要交待一下我为什么要去做这件事，又或者说是这么做有什么好处：</p>

<ul>
<li>首先这么做需要那么一点点伪技术，所以看上去就会比较geek一点。</li>
<li>其次这整个服务的搭建是完全免费的，可能对于比较穷困的专业挨踢的我来说会是一个开源节流的渠道。</li>
<li>然后用octopress来写博客，最后发布的动作很cool。</li>
</ul>


<figure class='code'><figcaption><span>个人感觉很帅气 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake preview
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<ul>
<li>最后则是离线写博客很舒服，拥有纯文本markdown，良好的html支持，不使用数据库，完美的版本控制，静态页面生成等诸多优点。</li>
</ul>


<p>好了，现在开始整个服务搭建过程记录，可能比较长：</p>

<h3>安装Git并进行配置</h3>

<ul>
<li>先注册一个github账号。</li>
<li>下载并安装Git。</li>
<li>到Git的安装目录找到Git Bash.lnk并打开。</li>
<li>执行<code>ssh-keygen -t rsa -C "your_email@youremail.com"</code>，回车。</li>
<li>然后输入两遍密码。</li>
<li>到c:\Users\用户名.ssh\目录找到id_rsa.pub，并用文本软件打开复制全部。</li>
<li>到github网站选择“Account Settings”>>“SSH Public Keys”>>“Add another public key”，将刚才复制的内容粘贴到key文本框内。</li>
</ul>


<h3>建立github pages</h3>

<ul>
<li>创建一个新的Repository。这里需要注意的是，如果想要博客的首页是http://yourname.github.com，则Repository的project name就必须是yourname.github.com。</li>
<li>根据github给出的指导进行一些命令的键入，即可完成pages的建立。</li>
</ul>


<h3>安装Ruby</h3>

<ul>
<li>这里要指出一点的是，因为我是在windows里安装，所以采用了<a href="http://rubyinstaller.org/">RubyInstaller</a>的方式，下载这个软件需要翻墙。</li>
<li>另外别忘记在同一个网站上下载<a href="http://rubyinstaller.org/add-ons/devkit/">DevKit</a>，必须安装。</li>
</ul>


<h3>安装octopress</h3>

<ul>
<li>获取octopress，执行<code>git clone git://github.com/imathis/octopress.git myblog</code>。</li>
<li>gem install bundler（记得翻墙）</li>
<li>bundle install（还是要翻墙）</li>
<li>rake install</li>
</ul>


<p>到了这一步基本上可以开始写日志了，不过这里要给出两个小的tips。</p>

<h3>修改配置</h3>

<ul>
<li>将octopress的目录内的_config.yml的编码改成UTF-8。</li>
<li>到Ruby的安装目录\lib\ruby\gems\1.9.1\gems\jekyll-0.11.0\lib\jekyll\找到convertible.rb这个文件，修改<code>self.content = File.read(File.join(base, name))</code>为<code>self.content = File.read(File.join(base, name), :encoding =&gt; "utf-8")</code>。</li>
<li>修改配置文件_config.yml，修改url、title、subtitle、author等等。</li>
</ul>


<h3>总算到了激动人心的一步了，开始写日志</h3>

<ul>
<li>执行<code>rake new_post["my first blog"]</code>，这样会在octopress的/source/_post下生成一个markdown文件，可以用文本软件进行编辑</li>
<li>完成编辑后执行<code>rake generate</code>，生成。</li>
<li>执行<code>rake preview</code>地，可以在浏览器内以<a href="http://127.0.0.1:4000">这个地址</a>进行预览。</li>
<li>最后执行<code>rake deploy</code>，将日志提交到github上，完美收工！</li>
</ul>


<h3>补充一点</h3>

<p>最后的但并不最不重要的，我们需要将修改的日志同步到github上，因此下面的3个命令也是必须的。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'your message'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通宵]]></title>
    <link href="http://odinyu.github.com/blog/overnight-work/"/>
    <updated>2012-02-29T00:00:00+08:00</updated>
    <id>http://odinyu.github.com/blog/overnight-work</id>
    <content type="html"><![CDATA[<p>今天通宵干活，是的，2012年的第一个通宵，为了服务的迁移。</p>

<p>其实我的任务不是很重，只是负责服务迁移后的测试并处理可能会发生的问题，但人还是必须在场的。</p>

<p>虽说现在眼睛有点酸，不过人却并不是很累，可能和刚刚学会怎么在github上用octopress建立博客有关。</p>

<p>下午快下班的时候搜索markdown的时候顺带看到的octopress，看下来感觉很有geek的感觉，就决定试一下。</p>

<p>由于对github、ruby等相关知识不是很熟，所以是一边搜索一边在做，去掉中间晚饭的时间一共用了3个多小时。</p>

<p>windows环境下对中文编码的支持有点小问题，还好有万能的google。</p>

<p>今天不太想把整个过程写下来，不过改天还是要记录一下的，多总结总是不错的。</p>

<p>最后附上在github上的<a href="http://odinyu.github.com/" title="新博客地址">http://odinyu.github.com/</a>，用的是slash主题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[杂乱的记录]]></title>
    <link href="http://odinyu.github.com/blog/cluttered-record/"/>
    <updated>2012-02-20T00:00:00+08:00</updated>
    <id>http://odinyu.github.com/blog/cluttered-record</id>
    <content type="html"><![CDATA[<p>昨天下载了iphone上的blogpress和wordpress应用，主要的目的就是为了给自己的博客除除草。</p>

<p>现在在用的是blogpress，连接到博客的速度不如wordpress，本身还是个收费应用，目前还看不出有什么过人之处。</p>

<p>估计它的特点是支持自定义图库吧，这个功能还需要折腾下才能体会到。</p>

<p>刚才在吃饭的时候突然有了个想法，就是从今天开始坚持每天看20页纸质书，不限品种更不限语种。不是为了长多少知识，只想试试自己能坚持多久。</p>

<p>很久没逼着自己去做什么事了。</p>

<p>贴一张用notica编辑过的照片，测试贴图。</p>

<p><img src="http://www.hopes4.me/wp-content/uploads/2012/02/D5D40512-2EE6-472E-9840-F9BD8D9672720.jpg" alt="" /></p>

<br>&#8211; 发送自我的 iPhone

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[香港4天3晚自由行游记--第一天]]></title>
    <link href="http://odinyu.github.com/blog/first-day-of-4-days-3-nights-in-hongkong/"/>
    <updated>2011-12-16T00:00:00+08:00</updated>
    <id>http://odinyu.github.com/blog/first-day-of-4-days-3-nights-in-hongkong</id>
    <content type="html"><![CDATA[<p>感觉自己真的是很会拖延，转眼香港之行已经过去快一个半月了，我的记录才到第一天，汗颜！</p>

<p>第一天的主要行程就是赶飞机，因为想有更多的时间可以感受香港，所以选择了早上8点25分的飞机。5点多起床，稍微吃了点早饭，拿上行李就出门了。</p>

<p>去机场是坐亲戚的出租车，一路顺利。浦东机场2号航站楼21号门进去，打电话给携程的送机人员，然后到D区港龙的柜台办理机票和行李托运。其实就是到柜台出示一下通行证，把行李放上托运传输带，拿好机票就ok了。携程的送机人员给了两张日上的95折券，所以我们也就很自然地去有名的日上逛逛。</p>

<p>老婆对化妆品没兴趣，所以只是买了点巧克力，另外给别人带了点倩碧的黄油。因为日上的营业员说寄存的话回来的时候可能要排很久的队才能取到，所以也就没存。于是无聊的一家三口就慢慢地向登机口晃过去，好像是提前了将近1小时就坐在登机口等着了。</p>

<p>运气还不错，登机的时候工件人员提示说带有小孩的可以优先进入，这样让我们也享受了一次和first class一样的待遇，不用排长队。飞机不大，但是上座率很高，好像没什么空位。</p>

<p>由于我和老婆的失误，忘记给小朋友准备吃的东西，所以从他在座椅上坐好之后就一直追问我们什么时候可以吃东西，估计是饿坏了。起飞二十分钟后开始送餐，我们是坐在飞机中间靠近机翼，所以又等了会才终于轮到。</p>

<p>小朋友开始吃东西就不吵了，虽然飞机餐并不怎么样。草草地解决了早饭，接下来开始无聊了。还好明智地带了个ipad，于是母子两玩游戏，我翻看香港报纸，算是提前感受香港。</p>

<p>整个飞行过程很平稳，起飞降落都没什么太大的感觉，这班港龙真的不错！</p>

<p>下飞机后先是办入境手续，队伍老长老长，大厅的空调也不是很冷，香港近30度的天气，有点热！好不容易办好手续，然后就是找到自己的行李，接下来换好香港的手机卡打电话回家报平安。</p>

<p>出机场找城巴A11线，不是有钱人，所以不考虑出租。同时考虑到坐地铁要换乘两次，拖着行李和小孩不方便，所以还是选择价钱并不便宜的A11。其实还有一个E11可以坐，基本路线和A11一样，只是中间有点绕路，想想还是算了。</p>

<p>车站很好找，站定后掏出淘宝上买好的3张八达通，等车。A11是双层巴士，其实好像香港的巴士，除了小巴都是双层的。坐在一层，行李放在司机背后的指定区域，开始看窗外风景。</p>

<p>一路经过好几座桥，还有不是很长的海底隧道。车行驶在郊区，并没有感觉和上海有什么不同，就是多一点山和海。不过一进市区，就明显感觉到香港特有的拥挤。街道不是一般的小，大部分的街道都只有来去4车道，并且人行道基本上只有上海的一半那么宽。同时虽然是接近中午的时候，但路上的行人并不少，这样更显街道的挤窄。</p>

<p>我们坐到湾仔消防局站下车，略看了一下google map，就很顺利地来到预订的铜锣湾智选假日酒店。酒店大堂在2楼，坐扶手电梯到大堂check in，整个过程只用了5分钟，并且按我要求地直接将退房时间延迟到下午2点。我之前在携程上预订的时候就要求高层且无烟，因此前台给了我27楼的一间房。</p>

<p>这里有个小插曲，我们上了楼打开房门后，一股烟味扑鼻而来。果断再下楼要求换房，换到20楼，且离电梯较远的一间房。这次总算是没有再次失望，房间没有异味也很干净和安静。放好行李，一家人换了身衣服准备下楼到附近找食。这时令我惊喜的事出现了，酒店房间里居然有免费的wifi信号，且信号很好！之前预订时我只看到介绍说是有免费的上网，同时也没有看到有人评论说有免费的wifi，来之前还怕手机3G上网速度不够呢，这下可没有顾虑了。之后几天免费的wifi也的确帮了我不少的忙，找饭店找商场寻路等等。</p>

<p>酒店地处铜锣湾最热闹的地段，所以找吃的东西还是很方便，按事先找好的攻略直奔池记，想尝尝有名的鲜虾云吞。虽然已经是下午1点左右的样子，可是池记门口居然5、6个人在排队，对于从不喜欢排队的我和我老婆，选择跳过池记，到就在不过的南记。</p>

<p>南记和池记的对应人群、装修风格明显不同，前者下里巴人，后者则阳春白雪。南记人也不少，里面才20平不到的店面基本满座。和收银的大婶用普通话相当艰难地点了3样东西后，我满头大汗地靠边站。话说这是在香港遇到的少数几个不大会说普通话的香港人，不过所有我武器询问的香港人都很客气和友善。</p>

<p>我点了一个有点辣的牛肉米粉、一个菜肉云吞面（我明明说的是鲜虾云吞的）和一个春卷（这是一个史上最坑爹的春卷）。牛肉米粉味道不错，云吞面马马虎虎，可是春卷却其实是几根像类似鱼芙蓉那样的东西泡在不知道什么汤里。</p>

<p>香港的普通餐厅的环境真的不是怎么好，位子小人多，吃东西的体验并不是很好，这在之后吃过的蛇王二也是如此。草草地吃完，因为怕小孩太累，所以决定回酒店一家人午睡。  酒店楼下有一家名叫聪嫂的甜品店，网上的口碑很好，所以我们也没有错过。随便点了两个，外卖到楼上吃，真心地好吃啊！</p>

<p>4点多午睡起来决定去逛时代广场，其实这次到香港也没想怎么买东西，本身小孩在身边也不方便。时代广场上的百老汇帮老婆同事带了台ipad2 16g wifi版，然后自己买了双adidas的鞋。</p>

<p>出了时代和老婆说去崇光吧，就一路逛过去，想想还是先吃饭，就近去了蛇王二。也是要排队的，整个感觉它就是很典型的香港老式饭店，店员都是中年男人。点了一碗双拼烧腊饭、一碗招牌八宝饭（不是甜的那种）和一盅冬瓜老鸭汤。价钱不便宜，但东西真的是不错，份量蛮多且很好吃。比较有趣的是坐在我们背面的一对小情侣，在离开的时候是用上海话请我们借过，呵呵。</p>

<p>填饱肚子后直奔崇光，本来是想给孩子买点东西的，但最后也没看中什么，只是给他买了个卡通的手表。  接下来就是回酒店准备休息，由于有了中午美味的享受，所以当然又顺手在聪嫂甜品店买了3个甜点。吃了以后总结下来，她家的甜点基本上只要是有芒果的就超好吃！</p>

<p>第一天就这样过去，老婆孩子睡了后我自己手机上了一会网，终于也在香港的第一晚渐渐睡去。</p>

<p><font color="#4f81bd">下次更新香港之行的第二天，可能又不知道什么时候，呵呵</font></p>
]]></content>
  </entry>
  
</feed>
